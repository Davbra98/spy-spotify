<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cbOptBitRate128" xml:space="preserve">
    <value>128kbps</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptBitRate160" xml:space="preserve">
    <value>160kbps</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptBitRate256" xml:space="preserve">
    <value>256kbps</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptBitRate320" xml:space="preserve">
    <value>320kbps</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptBitRateSpotifyFree" xml:space="preserve">
    <value>{0} (Spotify Free)</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptBitRateSpotifyPremium" xml:space="preserve">
    <value>{0} High quality (Spotify Premium)</value>
    <comment>interface</comment>
  </data>
  <data name="lblAddFolders" xml:space="preserve">
    <value>Group tracks inside their own folder</value>
    <comment>interface</comment>
  </data>
  <data name="lblAddSeparators" xml:space="preserve">
    <value>Replace files name spaces by underscores "_"</value>
    <comment>interface</comment>
  </data>
  <data name="lblAds" xml:space="preserve">
    <value>Ads:</value>
    <comment>interface</comment>
  </data>
  <data name="lblBitRate" xml:space="preserve">
    <value>Audio quality:</value>
    <comment>interface</comment>
  </data>
  <data name="lblEndingSongDelay" xml:space="preserve">
    <value>Delay next recording if sound is detected</value>
    <comment>interface</comment>
  </data>
  <data name="lblFormat" xml:space="preserve">
    <value>Audio format:</value>
    <comment>interface</comment>
  </data>
  <data name="lblLanguage" xml:space="preserve">
    <value>Language:</value>
    <comment>interface</comment>
  </data>
  <data name="lblMinLength" xml:space="preserve">
    <value>Minimal length:</value>
    <comment>interface</comment>
  </data>
  <data name="lblMuteAds" xml:space="preserve">
    <value>Mute Ads</value>
    <comment>interface</comment>
  </data>
  <data name="lblNumFiles" xml:space="preserve">
    <value>Add the counter number in front of all files name</value>
    <comment>interface</comment>
  </data>
  <data name="lblNumTracks" xml:space="preserve">
    <value>Replace track number by the counter value</value>
    <comment>interface</comment>
  </data>
  <data name="lblPath" xml:space="preserve">
    <value>Output path:</value>
    <comment>interface</comment>
  </data>
  <data name="lblRecorder" xml:space="preserve">
    <value>Recorder:</value>
    <comment>interface</comment>
  </data>
  <data name="lblRecordingNum" xml:space="preserve">
    <value>Choose the starting position of the counter</value>
    <comment>interface</comment>
  </data>
  <data name="lblRecordUnknownTrackType" xml:space="preserve">
    <value>Record unknown type tracks detected as an ad</value>
    <comment>interface</comment>
  </data>
  <data name="lblSpy" xml:space="preserve">
    <value>Spy:</value>
    <comment>interface</comment>
  </data>
  <data name="logAd" xml:space="preserve">
    <value>Ad</value>
    <comment>console</comment>
  </data>
  <data name="logDeleting" xml:space="preserve">
    <value>Removing: {0} [&lt; {1}s]</value>
    <comment>console</comment>
  </data>
  <data name="logInvalidOutput" xml:space="preserve">
    <value>// Error while recording: The output directory was not found.</value>
    <comment>interface</comment>
  </data>
  <data name="logRecording" xml:space="preserve">
    <value>Recording: {0}</value>
    <comment>console</comment>
  </data>
  <data name="logSpotifyConnecting" xml:space="preserve">
    <value>// Spotify isn't running, trying to launch it.</value>
    <comment>console</comment>
  </data>
  <data name="logSpotifyIsClosed" xml:space="preserve">
    <value>// Spotify is closed</value>
    <comment>console</comment>
  </data>
  <data name="logSpotifyNotConnected" xml:space="preserve">
    <value>// Spotify didn't connect to the local API, please try again.</value>
    <comment>console</comment>
  </data>
  <data name="logSpotifyNotFound" xml:space="preserve">
    <value>// Spotify wasn't found or isn't installed.</value>
    <comment>console</comment>
  </data>
  <data name="logStarting" xml:space="preserve">
    <value>// Spying</value>
    <comment>console</comment>
  </data>
  <data name="logStoping" xml:space="preserve">
    <value>// End</value>
    <comment>console</comment>
  </data>
  <data name="logUnsupportedRate" xml:space="preserve">
    <value>// Error while recording: Your computer audio format is not supported. Format needs to be '2 channels, 24 bit, 48000 Hz (Studio Quality)' or lower.  --&gt; Control panel &gt; Sound &gt; Properties &gt; Advanced</value>
    <comment>console</comment>
  </data>
  <data name="msgBodyCantQuit" xml:space="preserve">
    <value>Do you still want to leave?</value>
    <comment>message</comment>
  </data>
  <data name="msgBodyPathNotFound" xml:space="preserve">
    <value>This output path does not exist, select another one.</value>
    <comment>message</comment>
  </data>
  <data name="msgNewVersionContent" xml:space="preserve">
    <value>Do you want to open GitHub to view the newest Spytify release?</value>
    <comment>message</comment>
  </data>
  <data name="msgNewVersionTitle" xml:space="preserve">
    <value>Version {0} is out!</value>
    <comment>message</comment>
  </data>
  <data name="msgTitleCantQuit" xml:space="preserve">
    <value>Spytify is spying</value>
    <comment>message</comment>
  </data>
  <data name="msgTitlePathNotFound" xml:space="preserve">
    <value>Output path invalid</value>
    <comment>message</comment>
  </data>
  <data name="tabAdvanced" xml:space="preserve">
    <value>Advanced Settings</value>
    <comment>interface</comment>
  </data>
  <data name="tabRecord" xml:space="preserve">
    <value>Spy</value>
    <comment>interface</comment>
  </data>
  <data name="tabSettings" xml:space="preserve">
    <value>Settings</value>
    <comment>interface</comment>
  </data>
  <data name="tipClear" xml:space="preserve">
    <value>Clear history</value>
    <comment>interface</comment>
  </data>
  <data name="tipDirectory" xml:space="preserve">
    <value>Open output directory</value>
    <comment>interface</comment>
  </data>
  <data name="tipPath" xml:space="preserve">
    <value>Browse</value>
    <comment>interface</comment>
  </data>
  <data name="tipStartSpying" xml:space="preserve">
    <value>Start spying</value>
    <comment>interface</comment>
  </data>
  <data name="tipStopSying" xml:space="preserve">
    <value>Stop spying</value>
    <comment>interface</comment>
  </data>
  <data name="logUnknownException" xml:space="preserve">
    <value>// Error while recording: Unknown exception: {0}</value>
    <comment>console</comment>
  </data>
  <data name="logNoAccessOutput" xml:space="preserve">
    <value>// Error while recording: Access to the output directory is denied, run Spytify as an administrator or change for another one.</value>
    <comment>message</comment>
  </data>
  <data name="lblRecordOverRecordings" xml:space="preserve">
    <value>Record already recorded tracks instead of skipping them.</value>
    <comment>interface</comment>
  </data>
  <data name="logUnsupportedNumberChannels" xml:space="preserve">
    <value>// Error while recording: Recording multi-channel files is not supported ({0} channels), reduce the number of channels to 2 (stereo) or 1 (mono).</value>
    <comment>console</comment>
  </data>
  <data name="tipRelease" xml:space="preserve">
    <value>New version available</value>
    <comment>interface</comment>
  </data>
  <data name="lblAudioDevice" xml:space="preserve">
    <value>Audio Device:</value>
    <comment>interface</comment>
  </data>
  <data name="lblRecordingTimer" xml:space="preserve">
    <value>Timer for the recording session</value>
    <comment>interface</comment>
  </data>
  <data name="logRecordingTimerDone" xml:space="preserve">
    <value>// Recording session timer done.</value>
    <comment>console</comment>
  </data>
  <data name="logSpotifyPlayingOutsideOfSelectedAudioEndPoint" xml:space="preserve">
    <value>// Spytify cannot record if it doesn't use the same audio endpoint device than Spotify. See the online F.A.Q. to know how to move Spotify towards another device.</value>
    <comment>console</comment>
  </data>
  <data name="logStopRecordingWhenSongEnds" xml:space="preserve">
    <value>// Waiting for the recording of the current audio track to end</value>
    <comment>console</comment>
  </data>
  <data name="logPreviousLogs" xml:space="preserve">
    <value>// Previous recording session logs</value>
    <comment>console</comment>
  </data>
  <data name="logRecorded" xml:space="preserve">
    <value>Recorded {0} in: {1}</value>
    <comment>console</comment>
  </data>
  <data name="logTrackExists" xml:space="preserve">
    <value>// Skipping: {0} (recording already exists)</value>
    <comment>console</comment>
  </data>
  <data name="logMissingDlls" xml:space="preserve">
    <value>// Error while recording: DLL files missing - libmp3lame.32.dll and libmp3lame.64.dll</value>
    <comment>console</comment>
  </data>
  <data name="msgFolderDialog" xml:space="preserve">
    <value>Choose the folder where you want to save the recorded audio files.</value>
    <comment>interface</comment>
  </data>
  <data name="tipInstallVirtualCableDriver" xml:space="preserve">
    <value>Install Audio Virtual Cable</value>
    <comment>interface</comment>
  </data>
  <data name="tipUninstallVirtualCableDriver" xml:space="preserve">
    <value>Uninstall Audio Virtual Cable</value>
    <comment>interface</comment>
  </data>
  <data name="msgBodyDriverInstallationFailed" xml:space="preserve">
    <value>Failed to open the Audio Virtual Cable controller.</value>
    <comment>message</comment>
  </data>
  <data name="tipDonate" xml:space="preserve">
    <value>Donate to Spytify</value>
    <comment>interface</comment>
  </data>
  <data name="tipFAQ" xml:space="preserve">
    <value>See the F.A.Q.</value>
    <comment>interface</comment>
  </data>
  <data name="lblDuplicate" xml:space="preserve">
    <value>Duplicate</value>
    <comment>interface</comment>
  </data>
  <data name="logMaxFileSequenceReached" xml:space="preserve">
    <value>// Counter: Max file sequence prefix of {0} reached</value>
    <comment>console</comment>
  </data>
  <data name="tipNumModifierHold" xml:space="preserve">
    <value>CTRL affects the mask value</value>
    <comment>interface</comment>
  </data>
</root>